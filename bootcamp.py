# -*- coding: utf-8 -*-
"""Bootcamp (3).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kg61xHl6Etw0OQ0CQZPI2Hsq1mTKofUp
"""

print("Hello World!")

# Example of data types in python

x = 10  #this is an integer(whole number)
y = 10.2 #this is a float
name = "Bello" #this is a string
is_valid = True or False  #this is a boolean

type(is_valid)

#Arithmetic operators
#BODMAS/ PEMDAS
#add +
#subtract -
#multiply *
#divide /
#exponent **
#floor division //
#modulus %

(2*4)+5-(6/2)

add = 5 + 3
print(add)

5+3

5-3

5*3

5/3

5**3

5//3

5%3

#Comparison operators
# equal to  ==
# not equal to !=
# greater than >
# less than <
# greater than or equal to >=
# less than or equal to <=

5 == 3

5 != 3

5 > 3

5< 3

5 >= 3

5 <= 3

5 == 5

x = 12
y =5.2

is_student = True
name = "Aisha"

num1 = 20
num2 = 10

subtraction = num1 - num2
print(subtraction)

modulus = num1 % num2
print(modulus)

import pandas as pd

Name = ["Bello", 24, 70.5, True]

Name

type(Name)

my_dictionary = {
    "Name": "Bello",
    "Age": 24,
    "Weight": 70.5,
    "is_student": True
}

print(my_dictionary)

print(my_dictionary["Name"])

my_dictionary1 = {
    "Name": ["Bello", 'Faiza', 'Maryam', 'Rukayya', 'Amina', 'Aisha'],
    "Age": [24,21,22,23,24,25],
    "Weight": [70.5, 34.3, 45.6, 23.9, 67.8, 57.2],
    "is_student": [True, True, False, True, True, False]
}

print(my_dictionary1)

df = pd.DataFrame(my_dictionary1)

print(df)

df.head(3)

df.tail(3)

df.info()

df.describe()

netflix_df = pd.read_csv('titles.csv')

netflix_df.head()

netflix_df.tail()

netflix_df.info()

netflix_df.describe()

netflix_df_show = netflix_df[netflix_df['type'] == 'SHOW']
netflix_show_columns_subset = netflix_df_show[['title', 'release_year', 'genres', 'runtime','production_countries','type']]
netflix_show_columns_subset.tail()

netflix_df_movies = netflix_df[netflix_df['type'] == 'MOVIE']
netflix_movies_columns_subset = netflix_df_movies[['title', 'release_year', 'genres', 'runtime','production_countries','type']]
netflix_movies_columns_subset.tail()

import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

fig = plt.figure(figsize=(10,5))
plt.scatter(netflix_movies_columns_subset['release_year'], netflix_movies_columns_subset['runtime'])
plt.xlabel('Release Year')
plt.ylabel('Runtime')
plt.title('Movie Duration by Year of Release')
plt.show()

fig = plt.figure(figsize=(10,3))
plt.scatter(netflix_show_columns_subset['release_year'], netflix_show_columns_subset['runtime'])
plt.xlabel('Release Year')
plt.ylabel('Runtime')
plt.title('Show Duration by Year of Release')
plt.show()

fig = plt.figure()
plt.bar(netflix_movies_columns_subset['release_year'], netflix_movies_columns_subset['runtime'])
plt.xlabel('Release Year')
plt.ylabel('Runtime')
plt.title('Movie Duration by Year of Release')
plt.show()

plt.style.use('fivethirtyeight')
fig = plt.figure(figsize=(10,5))

colors = ['#67885a'] * len(netflix_movies_columns_subset['release_year'])
plt.scatter(netflix_movies_columns_subset['release_year'], netflix_movies_columns_subset['runtime'], color=colors )
plt.xlabel('Release Year')
plt.ylabel('Runtime')
plt.title('Movie Duration by Year of Release')
plt.show()

plt.style.use('fivethirtyeight')
fig = plt.figure(figsize=(10,5))

colors = ['#67885a', 'red'] * len(netflix_movies_columns_subset['release_year'])
plt.bar(netflix_movies_columns_subset['release_year'], netflix_movies_columns_subset['runtime'], color=colors )
plt.xlabel('Release Year')
plt.ylabel('Runtime')
plt.title('Movie Duration by Year of Release')
plt.show()

short_films = netflix_movies_columns_subset[netflix_movies_columns_subset['runtime'] < 60]
short_films.head(20)

import ast

# Convert string representations of lists to actual lists
short_films['production_countries'] = short_films['production_countries'].apply(ast.literal_eval)

colors = []
for index, row in short_films.iterrows():
  if ['US'] in row['production_countries']:
    colors.append('red')
  elif ['GB'] in row['production_countries']:
    colors.append('green')
  elif ['CA'] in row['production_countries']:
    colors.append('yellow')
  else:
    colors.append('blue')

plt.style.use('fivethirtyeight')
fig = plt.figure(figsize=(10,5))
plt.scatter(short_films['release_year'], short_films['runtime'], color=colors )
plt.xlabel('Release Year')
plt.ylabel('Runtime')
plt.title('Short Film Duration by Year of Release')
plt.show()